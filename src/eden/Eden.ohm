Eden {
  expression = compound | nothing

  compound = arithmeticExpression

  arithmeticExpression = additiveExpression
                      //  | multiplication
                      //  | primitiveExpression

  additiveExpression = addition 
                     | multiplicativeExpression

  addition = additiveExpression "+" multiplicativeExpression
           | additiveExpression "-" multiplicativeExpression

  multiplicativeExpression = multiplication
                           | exponentialExpression

  multiplication = multiplicativeExpression "*" exponentialExpression
                 | multiplicativeExpression "/" exponentialExpression
                 | multiplicativeExpression "%" exponentialExpression

  exponentialExpression = exponentiation
                        | primitiveExpression
  
  exponentiation = exponentialExpression "**" primitiveExpression

  primitiveExpression = parentheticalExpression
                      | atom
  
  parentheticalExpression = "(" expression ")"

  atom = number
  number = integerLiteral
  integerLiteral = digit+
  nothing = ~any
}