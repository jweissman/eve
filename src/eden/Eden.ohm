Eden {
  Program
    = Expression
    | Nothing

  Expression
    = SimpleExpression Nothing -- simple
    | CompoundExpression
    
  SimpleExpression
    = AssignmentExpression
    | ArithmeticExpression

  CompoundExpression
    = NonemptyListOf<SimpleExpression, sep*>
  sep = ";" | "\n" | "\r"

  AssignmentExpression = Identifier Equals SimpleExpression
  Equals = "="

  ArithmeticExpression = AdditiveExpression

  AdditiveExpression = Addition 
                     | MultiplicativeExpression

  Addition = AdditiveExpression "+" MultiplicativeExpression
           | AdditiveExpression "-" MultiplicativeExpression

  MultiplicativeExpression = Multiplication
                           | ExponentialExpression

  Multiplication = MultiplicativeExpression "*" ExponentialExpression
                 | MultiplicativeExpression "/" ExponentialExpression
                 | MultiplicativeExpression "%" ExponentialExpression

  ExponentialExpression = Exponentiation
                        | PrimitiveExpression
  
  Exponentiation = ExponentialExpression "**" PrimitiveExpression

  PrimitiveExpression = ParentheticalExpression
                      | Atom
  
  ParentheticalExpression = "(" SimpleExpression ")"

  Atom = IntegerLiteral
       | Identifier
       // todo: identifier, string, symbol

  Identifier
    = idElement+

  idElement = letter | "_"
  
  IntegerLiteral
    = number
  number = digit+

  EmptyProgram = Nothing
  Nothing = ~any
}